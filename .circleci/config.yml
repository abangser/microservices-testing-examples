version: 2.1

orbs:
  buildevents: honeycombio/buildevents@0
  docker: circleci/docker@2
  maven: circleci/maven@1

commands:

  install-xpath:
    steps:
      - run: |
          buildevents cmd ${CIRCLE_WORKFLOW_ID} ${BUILDEVENTS_SPAN_ID} 'apt update' -- \
            sudo apt update
      - run: |
          buildevents cmd ${CIRCLE_WORKFLOW_ID} ${BUILDEVENTS_SPAN_ID} 'install xpath' -- \
            sudo apt install libxml-xpath-perl
  
  build:
    parameters:
      service:
        type: string

    steps:
      - run: |
          buildevents cmd ${CIRCLE_WORKFLOW_ID} ${BUILDEVENTS_SPAN_ID} "build << parameters.service >>" -- \
            mvn clean verify -pl << parameters.service >> -Pcode-coverage -Pstatic-code-analysis
      - run:
          name: add-test-results-to-span
          when: always
          command: |
            BUILDEVENT_FILE=/tmp/<< parameters.service >>_specific_buildevents_file.txt
            echo " ci.tests.build.completed=$(xpath -q -e 'failsafe-summary/completed/text()'  << parameters.service >>/target/failsafe-reports/failsafe-summary.xml)" >> $BUILDEVENT_FILE
            echo " ci.tests.build.errors=$(xpath -q -e 'failsafe-summary/errors/text()'  << parameters.service >>/target/failsafe-reports/failsafe-summary.xml)" >> $BUILDEVENT_FILE
            echo " ci.tests.build.failures=$(xpath -q -e 'failsafe-summary/failures/text()'  << parameters.service >>/target/failsafe-reports/failsafe-summary.xml)" >> $BUILDEVENT_FILE
            echo " ci.tests.build.skipped=$(xpath -q -e 'failsafe-summary/skipped/text()'  << parameters.service >>/target/failsafe-reports/failsafe-summary.xml)" >> $BUILDEVENT_FILE
            cat $BUILDEVENT_FILE
            buildevents cmd ${CIRCLE_WORKFLOW_ID} ${BUILDEVENTS_SPAN_ID} report-test-results-<< parameters.service >> -- echo

jobs:

  setup:
    docker:
      - image: cimg/go:1.18

    steps:
      - buildevents/start_trace

  watch:
    docker:
      - image: cimg/go:1.18

    steps:
      - buildevents/watch_build_and_finish

  service_build:
    machine:
      image: ubuntu-2204:2022.04.2

    environment:
      PACT_CLI_IMG: pactfoundation/pact-cli:0.12.3.0
      PACT_BROKER_URL: localhost:9292
    
    parameters:
      service:
        type: string

    steps:
      - buildevents/with_job_span:
          steps:
            - checkout

            - install-xpath

            - build:
                service: << parameters.service >>

workflows:
  build_and_test:
    jobs:
      - setup
      - watch:
          requires:
            - setup
      - service_build:
          requires:
            - setup
          matrix:
            parameters:
              service: [
                "credit-score-service",
                "special-membership-service",
                "welcome-member-email-service",
              ]
